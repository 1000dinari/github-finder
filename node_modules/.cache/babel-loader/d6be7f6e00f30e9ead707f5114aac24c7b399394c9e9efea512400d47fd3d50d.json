{"ast":null,"code":"var _jsxFileName = \"/home/barbarik/js/github-finder/src/context/github/GithubContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchUsers = async () => {\n    const response = await fetch(`${GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users,\n      loading,\n      fetchUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n_s(GithubProvider, \"7VV5U2Js0/PjsYq3k2PJZfNfyyo=\");\n_c = GithubProvider;\nexport default GithubContext;\nvar _c;\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useState","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","users","setUsers","loading","setLoading","fetchUsers","response","fetch","headers","Authorization","data","json"],"sources":["/home/barbarik/js/github-finder/src/context/github/GithubContext.js"],"sourcesContent":["import {createContext, useState} from \"react\"\n\nconst GithubContext = createContext()\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL\n\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN\n\nexport const GithubProvider = ({children}) => {\n    const [users, setUsers] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const fetchUsers = async () => {\n        const response = await fetch(`${GITHUB_URL}/users`, \n        { headers:{\n            Authorization: `token ${GITHUB_TOKEN}`\n            }\n        })\n\n\n        const data = await response.json()\n        setUsers(data)\n        setLoading(false)\n    }\n\n    return <GithubContext.Provider value={{\n        users,\n        loading,\n        fetchUsers\n    }}>\n        {children}\n    </GithubContext.Provider>\n\n}\n\nexport default GithubContext"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,QAAO,OAAO;AAAA;AAE7C,MAAMC,aAAa,gBAAGF,aAAa,EAAE;AAErC,MAAMG,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAEnD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB;AAEvD,OAAO,MAAMC,cAAc,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,UAAU,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,UAAW,QAAO,EAClD;MAAEe,OAAO,EAAC;QACNC,aAAa,EAAG,SAAQZ,YAAa;MACrC;IACJ,CAAC,CAAC;IAGF,MAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClCT,QAAQ,CAACQ,IAAI,CAAC;IACdN,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBAAO,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAClCH,KAAK;MACLE,OAAO;MACPE;IACJ,CAAE;IAAA,UACGL;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE7B,CAAC;AAAA,GAzBYD,cAAc;AAAA,KAAdA,cAAc;AA2B3B,eAAeP,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}